class Dlog{constructor(){this.namespaces={default:{active:!1,style:{fontSize:"10pt",color:"#63666A"}}},this.showOnly=[],this.filterMessageShown=!1,this.isSilenced=!1}static logMessage(e,t,s="log"){if(!this.isSilenced){const i=this.namespaces[e]||this.namespaces.default;let l=i.active;this.showOnly.length>0&&!this.filterMessageShown&&(console.log(`%c Showing logs for ${JSON.stringify(this.showOnly)} only.`,"color: #00A499; font-size:10pt"),this.filterMessageShown=!0),l=this.showOnly.includes(e),l&&("error"===s?console.error(`${e}:`,...t):(const n=`color: ${i.style.color}; font-size: ${i.style.fontSize}`,console.log(`%c${e}:`,n,...t)))}}namespace(e){return e&&e.trim()!==""&&!this.namespaces.hasOwnProperty(e)&&(this.namespaces[e]={active:!0,style:{fontSize:"8pt",color:"#63666A"}}),{log:(...t)=>Dlog.logMessage.call(this,e,t,"log"),error:(...t)=>Dlog.logMessage.call(this,e,t,"error")}}deactivateAllNamespaces(){Object.keys(this.namespaces).forEach(e=>{this.namespaces[e].active=!1})}toggleGlobalSilence(e=!0){this.isSilenced=e}}
